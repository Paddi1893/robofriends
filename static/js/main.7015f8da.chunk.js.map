{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","website","react_default","a","createElement","className","alt","src","concat","href","CardList","robots","map","user","i","src_components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","_super","call","state","hasError","error","info","setState","Component","App","apiRequest","fetch","then","response","json","users","onSearchChange","event","target","value","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.7015f8da.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Card.css';\r\n\r\nconst Card = ({name ,email, id, website}) => {\r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt=\"robots\" src={`https://robohash.org/${id}?size=200x200`}/>\r\n            <div id=\"div1\">\r\n                <a href={website}><h2>{name}</h2></a>\r\n                <p>{email}</p>\r\n                {/* {\r\n                    console.log(name, email, id, website)\r\n                } */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from'./Card.js';\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return <Card key={user.id} id={user.id} name={user.name} email={user.email} website={user.website}/>\r\n                })   \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({searchfield, searchChange}) =>{  //the props are received\n    return (\n        <div className=\"pa2\">\n            <input \n            className=\"pa3 ba b--green bg-lightest-blue\"\n            type=\"search\" \n            placeholder=\"search robots\"\n            onChange={searchChange} //onChange is basic HTML -> with the function we passed\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from \"react\";\r\n\r\n//children\r\n//every react component has a prop and children\r\n//used to wrap other React components\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflow: 'scroll', border: '5px solid black', height:\"800px\"}}>\r\n            {props.children}\r\n        </div>\r\n    );    \r\n}\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    //new lifecycle hook\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n                return <h1>Oooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from \"react\";\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport './App.css';\n\nclass App extends Component {\n    constructor (){\n        super();\n        this.state = {  //these can change, and lives in the parent Component\n            robots: [],\n            searchfield: \"\"\n        }\n    }\n\n    componentDidMount(){\n        //delay in loading\n        // setTimeout(this.apiRequest, 2000);\n        this.apiRequest();\n    }\n\n    apiRequest = () => {\n        fetch(\"https://jsonplaceholder.typicode.com/users\").then(response=>response.json())\n        .then(users => this.setState({robots: users}))\n    }\n\n    onSearchChange = (event) => { \n        this.setState({searchfield: event.target.value}) //React keyword to change the state values always use that\n    }\n    render(){\n        const { robots, searchfield} = this.state;\n        const filteredRobots = robots.filter(robot =>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n        if(!robots.length){\n            return <h1>Loading</h1>\n        }\n        else {\n            return(\n            <div className=\"tc\">\n                <h1 className=\"f1\">RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange}/>  \n                <Scroll> \n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots}/>\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n            );\n        }\n        \n         //we passed the Search function to our Searchbox\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}